Функция СведенияОВнешнейОбработке() Экспорт 
	
	
	Команды = ПолучитьТаблицуКоманд();
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорм");
	ПараметрыРегистрации.Вставить("Назначение",ПолучитьНазначенияОбработки());
	ПараметрыРегистрации.Вставить("Наименование", "Печать КС-2");
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("Информация", "Задача БСО КС-2 №00-1833 Колосов Р.Б Профрешение");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Команды", Команды);
	
	
	
	
	ДобавитьКоманду(Команды, "Печать КС-2", "Печать_КС2", "ВызовСерверногоМетода", Ложь, "ПечатьXML");
	
	Возврат ПараметрыРегистрации;
КонецФункции    

Функция ПолучитьНазначенияОбработки()
	
	Массив = Новый Массив;
	Массив.Добавить("Документ.ИмпРеализацияСтроительныхРаботУслуг");
	
	Возврат Массив;	
КонецФункции 

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
КонецФункции     

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;	
	НоваяКоманда.Использование = Использование;	
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры  

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	  УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(ПараметрыВывода, "КС2", Нстр("ru = 'Печать КС-2'"),
	  		ПечатьКС2БСО(МассивОбъектов, ОбъектыПечати),,,);
	  
	
КонецПроцедуры  
  
Функция ПечатьКС2БСО(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = ПолучитьМакет("КС2");

	Стройка = "";
	Объект = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИмпРеализацияСтроительныхРаботУслуг.НоменклатурнаяГруппа.Родитель КАК Скважина,
	|	ИмпРеализацияСтроительныхРаботУслуг.НоменклатурнаяГруппа.Родитель.Родитель.Родитель КАК Месторождение,
	|	ИмпРеализацияСтроительныхРаботУслуг.Дата КАК Дата,
	|	ИмпРеализацияСтроительныхРаботУслуг.Инвестор КАК Инвестор,
	|	ИмпРеализацияСтроительныхРаботУслуг.Номер КАК Номер,
	|	ИмпРеализацияСтроительныхРаботУслуг.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
	|	ИмпРеализацияСтроительныхРаботУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИмпРеализацияСтроительныхРаботУслуг.Контрагент КАК Контрагент,
	|	ИмпРеализацияСтроительныхРаботУслуг.Организация КАК Организация,
	|	ИмпРеализацияСтроительныхРаботУслуг.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	|	ИмпРеализацияСтроительныхРаботУслуг.ПодписьПодрядчик КАК ПодписьПодрядчик
	|ИЗ
	|	Документ.ИмпРеализацияСтроительныхРаботУслуг КАК ИмпРеализацияСтроительныхРаботУслуг
	|ГДЕ
	|	ИмпРеализацияСтроительныхРаботУслуг.Ссылка = &Ссылка";	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);

	Результаты = Запрос.Выполнить().Выбрать();

	ВыборкаДетальныеЗаписи = Результаты;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Стройка = ВыборкаДетальныеЗаписи.Скважина; 
		Объект = ВыборкаДетальныеЗаписи.Месторождение;
	КонецЦикла;

	// // Шапка // *****
	СведенияОИнвесторе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДетальныеЗаписи.Инвестор, ВыборкаДетальныеЗаписи.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Инвестор = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОИнвесторе, "ПолноеНаименование,ЮридическийАдрес,Телефоны,Факс");;
	ОбластьМакета.Параметры.Стройка = Стройка;
	ОбластьМакета.Параметры.Объект = Объект;
	
	// ищем договор
	Договор = СокрЛП(ВыборкаДетальныеЗаписи.ДоговорКонтрагента); 
	НомерД = "№"; ДатаД = Формат(ВыборкаДетальныеЗаписи.Дата,"ДЛФ=Д"); 
	
	позиц = Найти(Договор,"от");
	Если Позиц > 0 Тогда
		НомерД = Лев(Договор, Позиц-1);
		ДатаД  = Сред(Договор, Позиц+2);
	КонецЕсли;
    ОбластьМакета.Параметры.Договор = ВыборкаДетальныеЗаписи.ДоговорКонтрагентаНомер;
    ОбластьМакета.Параметры.ДатаДоговора = ВыборкаДетальныеЗаписи.Дата;
	ОбластьМакета.Параметры.ДатаС=Формат(НачалоМесяца(ВыборкаДетальныеЗаписи.Дата),"ДЛФ=Д");
	ОбластьМакета.Параметры.ДатаДо=Формат(КонецМесяца(ВыборкаДетальныеЗаписи.Дата),"ДЛФ=Д");
	
	ОбластьМакета.Параметры.НомерДок = ВыборкаДетальныеЗаписи.Номер;
    ОбластьМакета.Параметры.ДатаДок  = Формат(ВыборкаДетальныеЗаписи.Дата,"ДЛФ=Д");

	ПредставлениеПодрядчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДетальныеЗаписи.Контрагент, ВыборкаДетальныеЗаписи.Дата),"ПолноеНаименование,ЮридическийАдрес,Телефоны,");;
	ОбластьМакета.Параметры.Подрядчик = ПредставлениеПодрядчика;
	ОбластьМакета.Параметры.ПоставщикУслуг = МассивОбъектов.Организация;
	
	ПредставлениеЗаказчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДетальныеЗаписи.Контрагент, ВыборкаДетальныеЗаписи.Дата),"ПолноеНаименование,ЮридическийАдрес,Телефоны,");;
	//ОбластьМакета.Параметры.Инвестор = ПредставлениеЗаказчика;
	ОбластьМакета.Параметры.Заказчик = ПредставлениеЗаказчика;
	ОбластьМакета.Параметры.Получатель = МассивОбъектов.Контрагент;
	
	//ОбластьМакета.Параметры.ОбъектСтроительства = СокрЛП(СсылкаНаОбъект.Проект.Наименование);
	//ОбластьМакета.Параметры.Стройка = СокрЛП(СсылкаНаОбъект.Проект.Наименование);

	Сумма    = МассивОбъектов.Услуги.Итог("Сумма");
	СуммаНДС = МассивОбъектов.Услуги.Итог("СуммаНДС");
	СуммаКПрописи = Сумма;
	//ОбластьМакета.Параметры.ТекстСметнаяСтоимость = "Сметная (договорная) стоимость в соответствии с договором подряда (субподряда) _______" + СсылкаНаОбъект.ВалютаДокумента.Наименование;//+ОбщегоНазначения.ФорматСумм(СуммаКПрописи, СсылкаНаОбъект.ВалютаДокумента);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ТабДокумент.Вывести(ОбластьМакета);

	НомерСтроки = 0;
	
	Для Каждого ТекСтрокаУслуги Из МассивОбъектов.Услуги Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");

		ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
		ОбластьМакета.Параметры.ТоварНаименование=ТекСтрокаУслуги.Номенклатура;
		ОбластьМакета.Параметры.Количество=ТекСтрокаУслуги.Количество;
		ОбластьМакета.Параметры.БазоваяЕдИзм = СокрЛП(ВыборкаДетальныеЗаписи.НоменклатураЕдиницаИзмерения);
		ОбластьМакета.Параметры.Цена=ТекСтрокаУслуги.Цена;
		ОбластьМакета.Параметры.СуммаБезНДС=ТекСтрокаУслуги.Сумма;
		
		ТабДокумент.Вывести(ОбластьМакета);
	 
	 КонецЦикла;

	 //ОбластьМакета = Макет.ПолучитьОбласть("НаклРасх");
	//ОбластьМакета.Параметры.СумНаклРуб = 0;
	//ТабДокумент.Вывести(ОбластьМакета);

	//ОбластьМакета = Макет.ПолучитьОбласть("ПланНак");
	//ОбластьМакета.Параметры.СумПланНакРуб = 0;
	//ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	//ОбластьМакета.Параметры.ИтогСуммы = Сумма;
	//ОбластьМакета.Параметры.ИтогНДС   = СуммаНДС;
	ОбластьМакета.Параметры.ИтогСуммыСНДС = СуммаКПрописи;
	ОбластьМакета.Параметры.Итого = СуммаКПрописи;
	//ОбластьМакета.Параметры.СуммаПрописью=ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, СсылкаНаОбъект.ВалютаДокумента);
	// Руководитель
	
	//Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата,);
	//Руководитель = Руководители.Руководитель;
	//ДолжностьРуководителя = Руководители.РуководительДолжность; 
	ДанныеФизЛицаСдал = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(МассивОбъектов.Организация, МассивОбъектов.ПодписьПодрядчик, МассивОбъектов.Дата);
	Должность = ДанныеФизЛицаСдал.Должность;
	ФИОполные = ДанныеФизЛицаСдал.Представление;
	Доверенность = "";
	
	//СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуру(СсылкаНаОбъект);
	//Если ЗначениеЗаполнено(СчетФактура) И ЗначениеЗаполнено(СчетФактура.Руководитель) Тогда
	//
	//	ЗапросПоИсполнителям = Новый Запрос();
	//	ЗапросПоИсполнителям.УстановитьПараметр("Физлицо", СчетФактура.Руководитель);
	//	ЗапросПоИсполнителям.Текст = 
	//	"ВЫБРАТЬ ПЕРВЫЕ 1
	//	|	СотрудникиОрганизаций.Физлицо.Наименование КАК ФИОПолное,
	//	|	СотрудникиОрганизаций.ТекущаяДолжностьОрганизации.Наименование КАК Должность
	//	|ИЗ
	//	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	//	|ГДЕ
	//	|	СотрудникиОрганизаций.Физлицо = &Физлицо
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	СотрудникиОрганизаций.ДатаПриемаНаРаботу УБЫВ";
	//	ВыборкаИсполнителей = ЗапросПоИсполнителям.Выполнить().Выбрать();
	//	
	//	Если ВыборкаИсполнителей.Следующий() Тогда
	//		
	//		ДолжностьРуководителя 	= ВыборкаИсполнителей.Должность;
	//		Руководитель          	= ВыборкаИсполнителей.ФиоПолное;
	//					
	//	КонецЕсли;
	//
	////КонецЕсли;  
	//  
	ЗапросДоверенности = Новый Запрос();
	ЗапросДоверенности.УстановитьПараметр("ФизическоеЛицо", МассивОбъектов.ПодписьПодрядчик);
	ЗапросДоверенности.УстановитьПараметр("Организация", МассивОбъектов.Организация);
	ЗапросДоверенности.УстановитьПараметр("Дата", МассивОбъектов.Дата);
	ЗапросДоверенности.УстановитьПараметр("Должность", ДанныеФизЛицаСдал.Должность);
	ЗапросДоверенности.Текст =
	"ВЫБРАТЬ
	|	ОснованияПраваПодписи.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ОснованияПраваПодписи КАК ОснованияПраваПодписи
	|ГДЕ
	|	ОснованияПраваПодписи.ФизическоеЛицо = &ФизическоеЛицо
	|	И ОснованияПраваПодписи.Организация = &Организация
	|	И ОснованияПраваПодписи.ДатаНачала <= &Дата
	|	И ОснованияПраваПодписи.ДатаОкончания >= &Дата
	|	И ОснованияПраваПодписи.Должность = &Должность";
	ВыборкаДоверенности = ЗапросДоверенности.Выполнить().Выбрать();
	
	Пока  ВыборкаДоверенности.Следующий() Цикл
		
		Доверенность = ВыборкаДоверенности.Наименование;
	
	КонецЦикла;

	ОбластьМакета.Параметры.ДолжностьРуководителя = Должность;
	ОбластьМакета.Параметры.ФИОРуководителя = ФИОполные;
	ОбластьМакета.Параметры.Доверенность = Доверенность;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	ТабДокумент.ТолькоПросмотр=Истина;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ОтображатьГруппировки = ложь;
	ТабДокумент.ОтображатьЗаголовки = ложь;
	ТабДокумент.ОтображатьСетку = ложь;
	
	Возврат ТабДокумент;


КонецФункции
	