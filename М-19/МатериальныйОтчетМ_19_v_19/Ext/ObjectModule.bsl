 Функция СведенияОВнешнейОбработке() Экспорт

    ИмяОтчета = ЭтотОбъект.Метаданные().Имя;
    Синоним = ЭтотОбъект.Метаданные().Синоним;
    Синоним = ?(ЗначениеЗаполнено(Синоним), Синоним, ИмяОтчета);

    РегистрационныеДанные = Новый Структура;
    РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет");
    РегистрационныеДанные.Вставить("Наименование", Синоним);
    РегистрационныеДанные.Вставить("Версия", "1.1");
    РегистрационныеДанные.Вставить("БезопасныйРежим", Истина);
    РегистрационныеДанные.Вставить("Информация", "Отчет " + Синоним);

    ТаблицаКоманд = ПолучитьТаблицуКоманд();

    ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет", "ОткрытиеФормы", Истина);

    РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);

    Возврат РегистрационныеДанные;

КонецФункции

Функция ПолучитьТаблицуКоманд()

    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

    Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ОткрытиеФормы", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")

    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;                                                                                          
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ИтоговыеНастройки = КомпоновщикНастроек.ПолучитьНастройки();
	СписокСчетов = ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("СписокСчетов");
    СписокСчетов.Значение.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.15"));
    СписокСчетов.Значение.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.16"));
    СписокСчетов.Значение.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.17"));
    СписокСчетов.Значение.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.06"));
    СписокСчетов.Значение.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.10"));
	Если ИтоговыеНастройки.ДополнительныеСвойства.КлючВарианта = "Основной" Тогда  
		Если ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("ДетализацияНаправлений").Значение  ТОгда
			  ИтоговыеНастройки.Структура[0].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Включен; 
		  Иначе
	  		  ИтоговыеНастройки.Структура[0].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
		КонецЕсли;
		   НастраиваемыйВариант = ИтоговыеНастройки.Структура[0].Структура;
		Если ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("МинимальныйДизайн").Значение Тогда
			НастраиваемыйВариант[1].Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
		Иначе
			НастраиваемыйВариант[0].Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
		КонецЕсли;
		Если ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("ВыводитьГК").Значение ТОГДА
			ЗапросГК_ИГС = Новый Запрос;
			ЗапросГК_ИГС.Текст = "ВЫБРАТЬ
			                     |	игсСпискиДляНастроекМеханизмовСписок.Значение КАК Значение
			                     |ИЗ
			                     |	Справочник.игсСпискиДляНастроекМеханизмов.Список КАК игсСпискиДляНастроекМеханизмовСписок
			                     |ГДЕ
			                     |	игсСпискиДляНастроекМеханизмовСписок.Ссылка.Владелец = ЗНАЧЕНИЕ(ПланВидовХарактеристик.игсНастройкиМеханизмов.КонтрагентыГруппыКомпаний)";
			ДанныеГК = ЗапросГК_ИГС.Выполнить().Выгрузить(); 
			Если ДанныеГК.Количество()	<> 0 Тогда
				ГК_ИГС = ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("ГК_ИГС");
				для каждого Компания из ДанныеГК Цикл
					ГК_ИГС.Значение.Добавить(Компания.Значение);
				КонецЦикла; 
			КонецЕсли;
		Иначе
			НастраиваемыйВариант[0].Выбор.Элементы[5].Элементы[1].Использование =  Ложь;	
		КонецЕсли;
	Иначе
		Если ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("ДетализацияНаправлений").Значение  ТОгда
			  ИтоговыеНастройки.Структура[0].Структура[0].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Включен;
		Иначе
			  ИтоговыеНастройки.Структура[0].Структура[0].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
		КонецЕсли;
	    НастраиваемыйВариант = ИтоговыеНастройки.Структура[0].Структура[0].Структура;
		Если ИтоговыеНастройки.ПараметрыДанных.Элементы.Найти("МинимальныйДизайн").Значение Тогда
			НастраиваемыйВариант[1].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
		Иначе
			НастраиваемыйВариант[0].Состояние =  СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;			
		КонецЕсли;
	КонецЕсли;
	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ИтоговыеНастройки, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);   
	
	
	
	ПОиск=ДокументРезультат.НайтиТекст("по месту хранения",ДокументРезультат.Область(1,1),,,,Истина); 
	ПОка не ПОиск=Неопределено Цикл
		ДокументРезультат.Область("R"+Формат(ПОиск.Низ,"ЧГ=0")).НачалоСтраницы=Истина;   //Эта строка работает также как ВывестиГоризонтальныйРазделительСтраниц()
		ПОиск=ДокументРезультат.НайтиТекст("по месту хранения",ДокументРезультат.Область("R"+Формат(ПОиск.Низ,"ЧГ=0")),,,,Истина);
	КонецЦикла;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры
