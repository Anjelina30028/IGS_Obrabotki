&НаСервере
Процедура ЗаполнитьНаСервере()
	Отказ = Ложь;
	
	Если Объект.НачПериод > Объект.КонПериод Тогда
		ОбщегоНазначения.СообщитьПользователю("Сначала нужно выбрать организацию", ,"Объект.НачПериода");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю("Сначала нужно выбрать организацию", ,"Объект.Организация");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;

	Параметр = Новый СписокЗначений;
	Параметр.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Параметр.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	Параметр.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	Параметр.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств);
	Параметр.Добавить(ПланыСчетов.Хозрасчетный.Материалы);
	Запрос.УстановитьПараметр("Счет", Параметр);
	Запрос.УстановитьПараметр("НачПериода", Объект.НачПериод);
	Запрос.УстановитьПараметр("КонПерода", Объект.КонПериод);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток) КАК НачальныйОстаток,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КонечныйОстаток,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток - ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток) КАК Расход,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.КоличествоОборот - (ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток - ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток)) КАК Приход,
	               |	ЕСТЬNULL(email1.Значение, """") КАК АдресПочты1,
	               |	ЕСТЬNULL(email2.Значение, """") КАК АдресПочты2,
	               |	ЕСТЬNULL(email3.Значение, """") КАК АдресПочты3
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПерода, Период, , , , ) КАК ХозрасчетныйОстаткиИОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК email1
	               |		ПО ХозрасчетныйОстаткиИОбороты.Субконто2 = email1.Ссылка
	               |			И (email1.Свойство.Имя = ""Email_1_42c7ebd14f24422cb2f69988cb717b20"")
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК email2
	               |		ПО ХозрасчетныйОстаткиИОбороты.Субконто2 = email2.Ссылка
	               |			И (email2.Свойство.Имя = ""Email_2_8757a413239b4f0aa840ae6e99f75b2c"")
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК email3
	               |		ПО (email3.Свойство.Имя = ""Email_3_17c418518f9b4c6b898a387f9637b4ef"")
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто2 = email3.Ссылка
	               |ГДЕ
	               |	ХозрасчетныйОстаткиИОбороты.Счет В ИЕРАРХИИ(&Счет)
	               |	И ХозрасчетныйОстаткиИОбороты.Организация = &Организация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2,
	               |	ЕСТЬNULL(email1.Значение, """"),
	               |	ЕСТЬNULL(email2.Значение, """"),
	               |	ЕСТЬNULL(email3.Значение, """")";
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("АдресПочты", Новый ОписаниеТипов("Строка", ,
	Новый КвалификаторыСтроки(200, ДопустимаяДлина.Переменная)));
	Для каждого Строка Из ТЗ Цикл
		Строка.АдресПочты = Строка.АдресПочты1 
			+ ?(ЗначениеЗаполнено(Строка.АдресПочты2), ";" + Строка.АдресПочты2, "")
			+ ?(ЗначениеЗаполнено(Строка.АдресПочты3), ";" + Строка.АдресПочты3, "");
	КонецЦикла; 
	Объект.МОЛ.Загрузить(ТЗ);
	ТЗ = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Объект.ТемаПисьма = "Материльный отчет";
	Объект.ТекстПисьма = "Добрый день!";
	Объект.НачПериод = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
	Объект.КонПериод = КонецМесяца(Объект.НачПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.ТемаПисьма) ИЛИ НЕ ЗначениеЗаполнено(Объект.ТекстПисьма) Тогда
		ОбщегоНазначения.СообщитьПользователю("Необходимо заполнить " +?(ЗначениеЗаполнено(Объект.ТемаПисьма), "текст письма!", "тему письма!"), ,?(ЗначениеЗаполнено(Объект.ТемаПисьма), "Объект.ТекстПисьма", "Объект.ТемаПисьма"));
		Отказ = Истина;	
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю("Необходимо заполнить организацию", ,"Объект.Организация"); 
		Отказ = Истина;	
	КонецЕсли; 
	
	Отправитель = ПолучитьУчетнуюЗапись(Объект.Организация);
	Если Отправитель = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю("Для даннй организации не выбрана учетная запись");
		Отказ = Истина;
	КонецЕсли;
	
	ИмяФайлаОтчета = ПолучитьИмяВременногоФайла();
	Отчет = ПолучитьНастройку(Объект.Организация);
	Если Отчет = Неопределено Тогда 
		ОбщегоНазначения.СообщитьПользователю("Дополнительный внешний отчет для отправки не выбран");
        Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат
	КонецЕсли;
		
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(Отправитель.Значение);
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(Профиль);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Подключение к почте не произведено! " + ОписаниеОшибки(), ,,СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	//// Создание отчет
	ДвоичныеДанные = Отчет.Значение;
	
	ДвоичныеДанные.Записать(ИмяФайлаОтчета);
	ОтчетПоМол = ВнешниеОтчеты.Создать(ИмяФайлаОтчета);
	ОтчетПоМол.ГруппироватьПоМестамХранения = Истина;
	ОтчетПоМол.ЗаполнитьСписокСчетов();
	ОтчетПоМол.ЗаполнитьНачальныеНастройки();	
	
	ШаблонИмениФайла = "Материальный отчет по материалам за " 
				+ Формат(Объект.КонПериод, "ДФ='MMMM yyyy'") + ".xls";
	ИмяФайла = КаталогВременныхФайлов() + ШаблонИмениФайла;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Для каждого Строка Из Объект.МОЛ Цикл
		
		ТабличныйДокумент.Очистить();
		
		Если НЕ Строка.Отметка ИЛИ НЕ ЗначениеЗаполнено(Строка.АдресПочты) Тогда
			Продолжить;
		КонецЕсли; 
		
		Сообщение = Новый ИнтернетПочтовоеСообщение;
		Сообщение.Тема        = Объект.ТемаПисьма;
		Сообщение.Отправитель = Отправитель;
		
		// По МОЛу формирование отчета и сохранение его в Excel
		ОтчетПоМол = Отчеты.ВедомостьТоварыНаСкладах.Создать();
		ОтчетПоМол.УстановитьНачальныеНастройки();
		ОтборСклад = ОтчетПоМол.ПостроительОтчета.Отбор.Найти("Склад");
		НовыйОтбор = ?(ОтборСклад = Неопределено, ОтчетПоМол.ПостроительОтчета.Отбор.Добавить("Склад"), ОтборСклад); 
		НовыйОтбор.ВидСравнения = ВидСравнения.Равно;
		НовыйОтбор.Значение = Строка.Склад;
		НовыйОтбор.Использование = Истина;
		ОтчетПоМол.ДатаНач = Объект.НачПериода;
		ОтчетПоМол.ДатаКон = КонецДня(Объект.КонПериод);
		ОтчетПоМол.СформироватьОтчет(ТабличныйДокумент);
		СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(ТекущаяДата(), Новый Структура("СтруктурнаяЕдиница", Строка.Склад));
		ОтчетПоМол.МОЛ = ?(СрезПоследних.Количество() < 1, Неопределено, СрезПоследних[0].ФизическоеЛицо);
		ТабличныйДокумент.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS);
		
		// добавление вложения в письмо
		НовоеВложение = Сообщение.Вложения.Добавить(Новый ДвоичныеДанные(ИмяФайла), ШаблонИмениФайла);
		
		
		// Получатели и адрес для отправки копий
		МассивПолучателей = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Строка.АдресПочты, ";");
		Для каждого Эл Из МассивПолучателей Цикл
			Сообщение.Получатели.Добавить(СокрЛП(Эл));
		КонецЦикла;

		// Текст письма	
		Сообщение.Тексты.Добавить(Объект.ТекстПисьма, ТипТекстаПочтовогоСообщения.ПростойТекст);
		
		Попытка
			Почта.Послать(Сообщение);
			ОбщегоНазначения.Сообщение("Отправлено уведомление на адрес " + Строка.АдресПочты);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Отправка уведомления не произведена! " + ОписаниеОшибки(),,,СтатусСообщения.Важное);
		КонецПопытки;
		
		Сообщение = Неопределено;	
	
	КонецЦикла; 
	
	//// Удаление временного файла
	Попытка
		УдалитьФайлы(ИмяФайла);  
	Исключение
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(ИмяФайлаОтчета);  
	Исключение
	КонецПопытки;
	
	//// Отключение от почты
	Попытка
		Почта.Отключиться();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Ошибка! " + ОписаниеОшибки(), ,,СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры
&НаСервере
Функция ПолучитьНастройку(Организация)
	
	Запрос = Новый Запрос;
	
	//Установка значений параметров
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.игсНастройкиМеханизмов.ВнешнийОтчетДляРассылки);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	игсНастройкиМеханизмовСрезПоследних.Настройка КАК Настройка,
	|	игсНастройкиМеханизмовСрезПоследних.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.игсНастройкиМеханизмов.СрезПоследних(, ) КАК игсНастройкиМеханизмовСрезПоследних
	|ГДЕ
	|	игсНастройкиМеханизмовСрезПоследних.Организация = &Организация
	|	И игсНастройкиМеханизмовСрезПоследних.Настройка = &Настройка";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выгрузить();
	Возврат Выборка[0];
	
КонецФункции  
&НаСервере
Функция ПолучитьУчетнуюЗапись(Организация)
	Запрос = Новый Запрос;
	
	//Установка значений параметров
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.игсНастройкиМеханизмов.УчетнаяЗаписьЭлектроннойПочтыДляРассылки);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	игсНастройкиМеханизмовСрезПоследних.Настройка КАК Настройка,
	|	игсНастройкиМеханизмовСрезПоследних.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.игсНастройкиМеханизмов.СрезПоследних(, ) КАК игсНастройкиМеханизмовСрезПоследних
	|ГДЕ
	|	игсНастройкиМеханизмовСрезПоследних.Организация = &Организация
	|	И игсНастройкиМеханизмовСрезПоследних.Настройка = &Настройка";
	
	Результат = Запрос.Выполнить(); 
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выгрузить();
	Возврат Выборка[0];
	
	
КонецФункции

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
    ВыбратьВсеНаСервере();
КонецПроцедуры 

&НаСервере
Процедура ВыбратьВсеНаСервере() 
	ТЗ = Объект.МОЛ.Выгрузить(, "Отметка");
	ТЗ.ЗаполнитьЗначения(Истина, "Отметка"); 
	ВремТаб = Объект.МОЛ.Выгрузить();
	ВремТаб.ЗагрузитьКолонку(ТЗ.ВыгрузитьКолонку("Отметка"), "Отметка");
	Объект.МОЛ.Загрузить(ВремТаб);		
КонецПроцедуры

&НаКлиенте
Процедура УбратьОтметку(Команда)
	УбратьОтметкуНаСервер()
КонецПроцедуры

&НаСервере
Процедура УбратьОтметкуНаСервер()
	ТЗ = Объект.МОЛ.Выгрузить(, "Отметка");
	ТЗ.ЗаполнитьЗначения(ЛОЖЬ, "Отметка"); 
	ВремТаб = Объект.МОЛ.Выгрузить();
	ВремТаб.ЗагрузитьКолонку(ТЗ.ВыгрузитьКолонку("Отметка"), "Отметка");
	Объект.МОЛ.Загрузить(ВремТаб);
КонецПроцедуры

