#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.ДатаФормирования) Тогда
		Объект.ДатаФормирования = ТекущаяДатаСеанса();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗаполнитьНаСервере();
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Для заполнения данных необходимо выбрать организацию", , "Объект.Организация");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	СсылкаНаДокумент = СоздатьДокумент(Объект.ДатаФормирования, Объект.Организация);
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);
	Форма = ОткрытьФорму("Документ.ОперацияБух.ФормаОбъекта", ПараметрыФормы);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Подразделение = ПолучитьЗначениеИзНастроекМеханизмов(Объект.Организация, "ПодразделениеНачисленияРезерваПоУбыточнымПроекта");
	Статья = ПолучитьЗначениеИзНастроекМеханизмов(Объект.Организация, "СтатьяЗатратНачисленияРезерваПоУбыточнымПроектам");
	Счет20 = игсБухгалтерскийУчетВызовСервера.ПолучитьСчет("20.01");
	Счет96 = игсБухгалтерскийУчетВызовСервера.ПолучитьСчет("96.09");
	
	Для Каждого Строка Из Объект.Проекты Цикл
		
		НоваяСтр = Форма.ХозрасчетныйНаборЗаписей.Добавить();
		НоваяСтр.СчетДТ = Счет20;
		НоваяСтр.СчетКТ = Счет96;
		Форма.Записать(ПараметрыЗаписи);
		
		НоваяСтр.ПодразделениеКт = Подразделение;
		НоваяСтр.ПодразделениеДт = Подразделение;
		
		НоваяСтр.СубконтоДт1 = Строка.ЭтапДляНачисленияРезерва;
		НоваяСтр.СубконтоДт2 = Статья;
		
		НоваяСтр.СубконтоКт1 = Строка.ЭтапДляНачисленияРезерва;
		
		НоваяСтр.СуммаНуДт = Строка.Разница;
		НоваяСтр.СуммаНуКт = Строка.Разница;
		НоваяСтр.Сумма = Строка.Разница;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Проекты.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Счет46", ПланыСчетов.Хозрасчетный.ВыполненныеЭтапыПоНезавершеннымРаботам);
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Хозрасчетный.Продажи);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ИмпВидыОперацийРеализацияСтроительныхРаботУслуг.ПоэтапнаяПередачаСМР);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НоменклатурныеГруппы.Родитель КАК Родитель,
		|	игсПлановыеВыручкаИСебестоимость.ПлановаяВыручка - игсПлановыеВыручкаИСебестоимость.ПлановаяСебестоимость КАК СуммаУбыткаПлановая,
		|	игсЭтапыСтроительстваПоСправкеПТО.ДатаОкончания КАК ДатаОкончания,
		|	ИмпРеализацияСтроительныхРаботУслуг.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.СчетДоходов В ИЕРАРХИИ (&Счет20)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФактическаяСебестоимость,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.СчетДоходов В ИЕРАРХИИ (&Счет46)
		|				ИЛИ ИмпРеализацияСтроительныхРаботУслугУслуги.СчетРасходов В ИЕРАРХИИ (&Счет46)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Выручка46Счет,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.СчетДоходов В ИЕРАРХИИ (&Счет90)
		|				ИЛИ ИмпРеализацияСтроительныхРаботУслугУслуги.СчетРасходов В ИЕРАРХИИ (&Счет90)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугУслуги.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Выручка90Счет,
		|	ИмпРеализацияСтроительныхРаботУслугУслуги.Субконто КАК Субконто
		|ИЗ
		|	РегистрСведений.игсПлановыеВыручкаИСебестоимость КАК игсПлановыеВыручкаИСебестоимость
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИмпРеализацияСтроительныхРаботУслуг.Услуги КАК ИмпРеализацияСтроительныхРаботУслугУслуги
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.игсЭтапыСтроительстваПоСправкеПТО КАК игсЭтапыСтроительстваПоСправкеПТО
		|				ПО ИмпРеализацияСтроительныхРаботУслугУслуги.Субконто = игсЭтапыСтроительстваПоСправкеПТО.НоменклатурнаяГруппа
		|				ПРАВОЕ СОЕДИНЕНИЕ Документ.ИмпРеализацияСтроительныхРаботУслуг КАК ИмпРеализацияСтроительныхРаботУслуг
		|				ПО ИмпРеализацияСтроительныхРаботУслугУслуги.Ссылка = ИмпРеализацияСтроительныхРаботУслуг.Ссылка
		|			ПО (ИмпРеализацияСтроительныхРаботУслугУслуги.Субконто = НоменклатурныеГруппы.Ссылка)
		|		ПО игсПлановыеВыручкаИСебестоимость.Скважина = НоменклатурныеГруппы.Родитель
		|ГДЕ
		|	ИмпРеализацияСтроительныхРаботУслуг.ВидОперации = &ВидОперации
		|	И игсПлановыеВыручкаИСебестоимость.ПлановаяВыручка - игсПлановыеВыручкаИСебестоимость.ПлановаяСебестоимость < 0
		|	И ИмпРеализацияСтроительныхРаботУслуг.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НоменклатурныеГруппы.Родитель,
		|	игсПлановыеВыручкаИСебестоимость.ПлановаяВыручка - игсПлановыеВыручкаИСебестоимость.ПлановаяСебестоимость,
		|	игсЭтапыСтроительстваПоСправкеПТО.ДатаОкончания,
		|	ИмпРеализацияСтроительныхРаботУслуг.Ссылка,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.СчетДоходов В ИЕРАРХИИ (&Счет20)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.СчетДоходов В ИЕРАРХИИ (&Счет46)
		|				ИЛИ ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.СчетРасходов В ИЕРАРХИИ (&Счет46)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.СчетДоходов В ИЕРАРХИИ (&Счет90)
		|				ИЛИ ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.СчетРасходов В ИЕРАРХИИ (&Счет90)
		|			ТОГДА ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Субконто
		|ИЗ
		|	РегистрСведений.игсПлановыеВыручкаИСебестоимость КАК игсПлановыеВыручкаИСебестоимость
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИмпРеализацияСтроительныхРаботУслуг.СубподрядныеРаботы КАК ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.игсЭтапыСтроительстваПоСправкеПТО КАК игсЭтапыСтроительстваПоСправкеПТО
		|				ПО ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Субконто = игсЭтапыСтроительстваПоСправкеПТО.НоменклатурнаяГруппа
		|				ПРАВОЕ СОЕДИНЕНИЕ Документ.ИмпРеализацияСтроительныхРаботУслуг КАК ИмпРеализацияСтроительныхРаботУслуг
		|				ПО ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Ссылка = ИмпРеализацияСтроительныхРаботУслуг.Ссылка
		|			ПО НоменклатурныеГруппы.Ссылка = ИмпРеализацияСтроительныхРаботУслугСубподрядныеРаботы.Субконто
		|		ПО игсПлановыеВыручкаИСебестоимость.Скважина = НоменклатурныеГруппы.Родитель
		|ГДЕ
		|	ИмпРеализацияСтроительныхРаботУслуг.ВидОперации = &ВидОперации
		|	И ИмпРеализацияСтроительныхРаботУслуг.Организация = &Организация
		|	И игсПлановыеВыручкаИСебестоимость.ПлановаяВыручка - игсПлановыеВыручкаИСебестоимость.ПлановаяСебестоимость < 0";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю("На данный момент отсутствуют проекты удовлетворяющие условиям");
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	СвернутаяВыборка = Результат.Выгрузить();
	СвернутаяВыборка.Свернуть("Родитель, СуммаУбыткаПлановая");
	
	ВыборкаФактическая = Результат.Выгрузить();
	ВыборкаФактическая.Свернуть("Родитель, ФактическаяСебестоимость, Выручка46Счет, Выручка90Счет");
	
	Этапы = Новый ТаблицаЗначений;
	Этапы.Колонки.Добавить("Этап");
	Этапы.Колонки.Добавить("ДатаОкончания");
	Этапы.Колонки.Добавить("Проект");
	Этапы.Колонки.Добавить("СуммаУбыткаПлановая");
	Этапы.Колонки.Добавить("СуммаУбыткаФактическая");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьВМассиве = Этапы.Найти(игсПроектЭтапа(Выборка.Субконто));
		Если ЗаписьВМассиве = Неопределено Тогда
			Стр = Этапы.Добавить();
			Стр.Этап = Выборка.Субконто;
			Стр.ДатаОкончания = Выборка.ДатаОкончания;
			Стр.Проект = игсПроектЭтапа(Выборка.Субконто);
			Стр.СуммаУбыткаПлановая = -СвернутаяВыборка.Найти(Выборка.Родитель, "Родитель").СуммаУбыткаПлановая;
			стр.СуммаУбыткаФактическая = получитьДанныеФактическойСтоимости(ВыборкаФактическая.Найти(Выборка.Родитель, "Родитель"));
		Иначе
			Если Выборка.ДатаОкончания > ЗаписьВМассиве.ДатаОкончания Тогда
				ЗаписьВМассиве.Этап = Выборка.Субконто;
				ЗаписьВМассиве.ДатаОкончания = Выборка.ДатаОкончания;
				ЗаписьВМассиве.СуммаУбыткаПлановая = -СвернутаяВыборка.Найти(Выборка.Родитель, "Родитель").СуммаУбыткаПлановая;
				ЗаписьВМассиве.СуммаУбыткаФактическая = получитьДанныеФактическойСтоимости(ВыборкаФактическая.Найти(Выборка.Родитель, "Родитель"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Этапы Цикл
		НоваяСтрока = Объект.Проекты.Добавить();
		НоваяСтрока.ЭтапДляНачисленияРезерва = Строка.Этап;
		НоваяСтрока.Проект = Строка.Проект;
		НоваяСтрока.СуммаУбыткаПлановая = Строка.СуммаУбыткаПлановая;
		НоваяСтрока.СуммаУбыткаФактическая = Строка.СуммаУбыткаФактическая;
		НоваяСтрока.Разница = Строка.СуммаУбыткаПлановая - Строка.СуммаУбыткаФактическая;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция игсПроектЭтапа(Знач Ссылка)
	
	Проект = Ссылка;
	РодительСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "Родитель");
	
	Если ЗначениеЗаполнено(РодительСсылка) Тогда
		Проект = игсПроектЭтапа(РодительСсылка);
	КонецЕсли;
	
	Возврат Проект;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеФактическойСтоимости(Запись)
	
	Себестоимость = Запись.ФактическаяСебестоимость;
	Счет46 = Запись.Выручка46Счет;
	Счет90 = Запись.Выручка90Счет;
	ФактическаяВыручка = Счет46 - Счет90;
	ФактическаяСуммаУбытка = Себестоимость - ФактическаяВыручка;
	Возврат ФактическаяСуммаУбытка;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьДокумент(Знач ДатаФормирования, Знач Организация)
	
	НовыйДокумент = Документы.ОперацияБух.СоздатьДокумент();
	НовыйДокумент.Дата = ?(ЗначениеЗаполнено(ДатаФормирования), ДатаФормирования, ТекущаяДатаСеанса());
	НовыйДокумент.Организация = Организация;
	НовыйДокумент.Комментарий = "резерв СК";
	НовыйДокумент.Содержание = "резерв СК";
	НовыйДокумент.Записать();
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеИзНастроекМеханизмов(Знач Организация, Знач ТипЗначенияНастроек)
	
	ЗначениеИзНастроек = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.игсНастройкиМеханизмов[ТипЗначенияНастроек]);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	игсНастройкиМеханизмовСрезПоследних.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.игсНастройкиМеханизмов.СрезПоследних(, Организация = &Организация И Настройка = &Настройка) КАК игсНастройкиМеханизмовСрезПоследних";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю("Статья не была найдена");
	Иначе
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			ЗначениеИзНастроек = Выборка.Значение;
		КонецЕсли;
	КонецЕсли;
		
	Возврат ЗначениеИзНастроек;
	
КонецФункции

#КонецОбласти